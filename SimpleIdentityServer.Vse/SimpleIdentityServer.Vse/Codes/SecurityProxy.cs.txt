#region copyright
// Copyright 2015 Habart Thierry
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#endregion

using SimpleIdentityServer.Proxy;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace {namespace}
{
    public class SecurityProxy_{hash}
    {	
        /// <summary>
        /// Get an RPT token to access to a protected resource.
        /// <see cref="https://docs.kantarainitiative.org/uma/rec-uma-core.html#uma-bearer-token-profile" /> for more information about the statement.
        /// </summary>
        /// <param name="umaProtectionToken">Token valid for the scope uma_protection</param>
        /// <param name="umaAuthorizationToken">Token valid for the scope uma_authorization</param>
        /// <param name="resourceToken">Token valid for the scope website_api</param>
        /// <returns>An rpt token</returns>
        public static async Task<string> GetRptToken(
            string umaProtectionToken,
            string umaAuthorizationToken,
            string resourceToken)
        {
            var factory = new SecurityProxyFactory();
            var proxy = factory.GetProxy(new SecurityOptions
            {
                UmaConfigurationUrl = "https://localhost:5445/.well-known/uma-configuration",
                OpenidConfigurationUrl = "https://localhost:5443/.well-known/openid-configuration",
                RootManageApiUrl = "https://localhost:5444/api"
            });
            try
            {
                var result = await proxy.GetRpt("{resource_url}", umaProtectionToken, umaAuthorizationToken, resourceToken, new List<string>
                {
                    "execute"
                });
                return result;
            }
            catch (Exception)
            {
                return null;
            }
        }
		
        /// <summary>
        /// Get an RPT token to access to a protected resource.
        /// <see cref="https://docs.kantarainitiative.org/uma/rec-uma-core.html#uma-bearer-token-profile" /> for more information about the statement.
        /// </summary>
        /// <param name="idToken">JWS token used by the authorization policy</param>
        /// <param name="umaProtectionToken">Token valid for the scope uma_protection</param>
        /// <param name="umaAuthorizationToken">Token valid for the scope uma_authorization</param>
        /// <param name="resourceToken">Token valid for the scope website_api</param>
        /// <returns>An rpt token</returns>
		public static async Task<string> GetRptToken(
            string idToken,
            string umaProtectionToken,
            string umaAuthorizationToken,
			string resourceToken)
        {
            var factory = new SecurityProxyFactory();
            var proxy = factory.GetProxy(new SecurityOptions
            {
                UmaConfigurationUrl = "https://localhost:5445/.well-known/uma-configuration",
                OpenidConfigurationUrl = "https://localhost:5443/.well-known/openid-configuration",
                RootManageApiUrl = "https://localhost:5444/api"
            });
            try
            {
                var result = await proxy.GetRpt("{resource_url}", idToken, umaProtectionToken, umaAuthorizationToken, resourceToken, new List<string>
                {
                    "execute"
                });
                return result;
            }
            catch (Exception)
            {
                return null;
            }
        }
    }
}
